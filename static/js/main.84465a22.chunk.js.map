{"version":3,"sources":["components/MemoryCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["MemoryCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffleMemory","Wrapper","wrapperClass","children","Title","title","instructions","Navbar","href","navbarClass","status","score","top_score","App","state","memories","myShuffler","memoryArr","resetCards","id","console","log","i","length","randomIndex","Math","floor","random","itemAtIndex","clicked","memJson","_this","statusText","setState","_this2","this","components_Navbar","components_Title","components_Wrapper","map","memory","components_MemoryCard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.84465a22.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction MemoryCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.shuffleMemory(props)} />\n      </div>\n    </div>\n  );\n}\n\nexport default MemoryCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return (\n    <div className={props.wrapperClass}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <header className=\"myHeader\">\n     <h1>{props.title}</h1>\n     <h2>{props.instructions}</h2>\n    </header>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <div className=\"container-fluid fixed-top\">\n      <nav className=\"navbar navbar-expand-lg\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Travel Clicky Game\n        </a>\n        <div className={props.navbarClass}>\n          {props.status}\n        </div>\n        <div className=\"scores\">\n          Score: {props.score} | Top Score: {props.top_score}\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport MemoryCard from \"./components/MemoryCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport memories from \"./memories.json\";\n\n\nclass App extends Component {\n  // Setting this.state.memories to the memories json array\n  state = {\n    memories,\n    score: 0,\n    top_score: 0,\n    status: \"Click image to begin!\",\n    navbarClass: \"gameStatus \",\n    wrapperClass: \"wrapper \"\n  };\n\n\n\n  myShuffler = (memoryArr, resetCards, id) => {\n    console.log(\"in myShuffler\");\n\n    // Using Fisher-Yates Algo\n    // https://www.kirupa.com/html5/shuffling_array_js.htm\n    for (let i = memoryArr.length - 1; i >= 0; i--) {\n      let randomIndex = Math.floor(Math.random() * (i + 1));\n      let itemAtIndex = memoryArr[randomIndex];\n      memoryArr[randomIndex] = memories[i];\n      memoryArr[i] = itemAtIndex;\n\n      if (resetCards) { // if user selected same card again, reset game\n        memoryArr[i].clicked = false;\n      }\n      else { // set clicked\n        if (memoryArr[i].id === id) {\n          memoryArr[i].clicked = true;\n        }\n      }\n    }\n  }\n\n  shuffleMemory = memJson => {\n    let memoryArr = this.state.memories;\n    let score = this.state.score;\n    let top_score = this.state.top_score;\n    let resetCards = false;\n    let statusText = \"Click image to begin!\";\n    let navbarClass = \"gameStatus \";\n    let wrapperClass = \"wrapper \";\n\n    // Need to determine if image already clicked:\n    //   if   clicked before - reset game (score)\n    if (memJson.clicked === true) {\n      console.log(\"already selected this card\");\n      if (score > top_score) {\n        top_score = score;\n      }\n      score = 0;\n      resetCards = true;\n      statusText = \"You guessed incorrectly!\";\n      // Need to flash statusText red\n      navbarClass = navbarClass + \"gameStatusIncorrect\";\n      // Need to shake .wrapper\n      wrapperClass = wrapperClass + \"incorrectShake\";\n    }\n    else {\n      console.log(\"new card selected\");\n      score++;\n      statusText = \"You guessed correctly!\";\n      // this is part of making nav bar green but not using it. navbarClass = navbarClass + \"gameStatusCorrect\";\n      wrapperClass = \"wrapper\";\n    }\n\n    console.log(\"top score = \" + top_score);\n    console.log(\"score     = \" + score);\n\n    //  shuffle cards\n    this.myShuffler(memoryArr, resetCards, memJson.id);\n    this.setState({ memories: memoryArr });\n    this.setState({ top_score: top_score });\n    this.setState({ score: score });\n    this.setState({ status: statusText });\n    this.setState({ wrapperClass: wrapperClass });\n    this.setState({ navbarClass: navbarClass });\n\n  };\n\n  // Map over this.state.memories and render a MemoryCard component for each memory object\n  render() {\n    return (\n      <div>\n        <Navbar\n          status={this.state.status}\n          score={this.state.score}\n          top_score={this.state.top_score}\n          navbarClass={this.state.navbarClass}\n        />\n        <Title\n          title=\"Travel Clicky Game!\"\n          instructions=\"Click on an image to earn points, but don't click on any more than once!\">\n        </Title>\n        <Wrapper wrapperClass={this.state.wrapperClass}>\n          {this.state.memories.map(memory => (\n            <MemoryCard\n              shuffleMemory={this.shuffleMemory}\n              id={memory.id}\n              clicked={memory.clicked}\n              name={memory.name}\n              image={memory.image}\n            />\n\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}